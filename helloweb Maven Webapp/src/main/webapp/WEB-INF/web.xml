<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	
	<!-- 上下文参数（第一启动），指定jdbc配置文件位置  -->
    <context-param>
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:config/jdbc.xml</param-value>  
    </context-param>   
    
    <!-- springMvc前置总控制器（第四启动），在分发其它的控制器前都要经过这个总控制器 -->
    <servlet>  
        <servlet-name>spring-mvc</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
	    <init-param>  
	        <param-name>contextConfigLocation</param-name>  
	        <param-value>classpath:config/springmvc.xml</param-value>  
	    </init-param>  
	    <load-on-startup>2</load-on-startup>  
    </servlet> 
    
    <!-- Spring和mybatis的配置文件 -->  
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:config/spring-mybatis.xml</param-value>  
    </context-param>  
	
	<!-- spring监听器（第二启动），监听springMvc环境 -->
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>  
    
    <!-- log4j配置，文件路径，因为是跟随项目启动 -->
	<context-param>     
	      <param-name>log4jConfigLocation</param-name>     
	      <param-value>classpath:config/log4j.xml</param-value>     
	</context-param>     
	<!-- 配置log4j.xml变量，如果需要动态的就使用下面方式，使用方法${name} --> 
	<context-param> 
	  <param-name>controller</param-name> 
	  <param-value>controller-log</param-value> 
	</context-param> 
	
	<context-param> 
	  <param-name>loggingLevel</param-name> 
	  <param-value>info</param-value> 
	</context-param> 
	 <!-- 加载log4j配置文件 -->
	 <listener>
	  <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	 </listener>
	
	<!-- springMvc编码拦截器（第三启动），springMvc内置的编码拦截器 -->
    <filter>  
        <filter-name>encodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
    </filter>  
    
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
     
    
    
    <!-- 拦截设置 -->
	<servlet-mapping>  
        <servlet-name>spring-mvc</servlet-name>  
        <url-pattern>/</url-pattern>  
    </servlet-mapping> 

	<!-- 网站的默认首页   -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>
